{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/gitrepos/gitrepos.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/github.service.ts","webpack:///./src/app/gitrepos/gitrepos.component.css","webpack:///./src/app/gitrepos/gitrepos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h2>\\n    Welcome to {{ title }}!\\n  </h2>\\n</div>\\n\\n<app-gitrepos></app-gitrepos>\\n\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n    <thead>\\n        <tr>\\n            <th>Name</th>\\n            <th>Stars</th>\\n            <th>Forks</th>\\n            \\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let git of gitRepoList\\\">\\n            <td><a href=\\\"{{git.htmlUrl}}\\\" target=\\\"_blank\\\">{{git.name}}</a></td>\\n            <td>{{git.stars}}</td>\\n            <td>{{git.forks}}</td>            \\n        </tr>        \\n    </tbody>\\n</table>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Git House';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { GitreposComponent } from './gitrepos/gitrepos.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GitreposComponent\n  ],\n  imports: [\n      BrowserModule, HttpClientModule\n  ],\n  providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { GitRepoInfo } from './git-repo-info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {   \n\n    constructor(private httpClient: HttpClient) { }\n\n    getUserRepos(): Observable<GitRepoInfo> {\n        return this.httpClient.get(`https://api.github.com/users/ranjith83/repos`).\n            pipe(\n                map((item: any) => item.map(p => <GitRepoInfo>\n                    {\n                        name: p.name,\n                        stars: p.stargazers_count,\n                        htmlUrl: p.html_url,\n                        forks: p.forks,\n                        description: p.description\n                    })));            \n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZ2l0cmVwb3MvZ2l0cmVwb3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { GithubService } from '../github.service';\n\n@Component({\n    selector: 'app-gitrepos',\n    templateUrl: './gitrepos.component.html',\n    styleUrls: ['./gitrepos.component.css']\n})\nexport class GitreposComponent implements OnInit {\n    public gitRepoList;\n    constructor(private githubserv: GithubService) { }\n\n    ngOnInit() {\n        this.loadGithubRepos();\n    }\n\n    public loadGithubRepos() {\n        this.githubserv.getUserRepos().subscribe((data) => {\n            this.gitRepoList = data;\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}